# -*-Makefile-*-
CXX = mpicxx
BINDIR = bin
MKDIR_P = mkdir -p
OUT_DIR = bin

CXXFLAGS= -O3 -Wall -DENABLE_GPU

CUDA_ROOT ?= /usr/local/cuda-6.5
CUDA_LIB ?= $(CUDA_ROOT)/lib64
CUDA_INC ?= $(CUDA_ROOT)/include
CUDA_SM ?= 20

FFTW_LIB ?= /usr/lib
FFTW_INC ?= /usr/include
LDFLAGS= -L../../lib -laccfft -L$(FFTW_LIB)  -lfftw3 -lfftw3_threads -fopenmp
LDFLAGS_GPU= -L../../lib -laccfft_gpu -lcufft

INCDIR= -I$(FFTW_INC)  -I../../include/

# OpenMPI
MPI_LIB ?= $(shell mpicxx --showme:link)
MPI_INC ?= $(shell mpicxx --showme:compile)
# MVAPICH
#MPI_LIB ?= $(shell mpicxx -compile-info)
#MPI_INC ?= $(shell mpicxx -link-info)


N_INC= -I$(CUDA_INC) -I./ -I$(FFTW_INC) 
N_LIB= -L$(CUDA_LIB) -L$(FFTW_LIB)

N_CXXFLAGS= -O3 -lcudart -lcufft -fopenmp -lfftw3 -lfftw3_threads
N_CXXINC= -I$(CUDA_INC) -I$(FFTW_INC)
N_CXXLIB= -L$(CUDA_LIB) -L$(FFTW_LIB)

N_FLAGS = -c -O3 -gencode arch=compute_$(CUDA_SM),code=sm_$(CUDA_SM) -Xcompiler -fopenmp -DENABLE_GPU 
N_FLAGS += -Xcompiler -I../../include
N_FLAGS += $(addprefix -Xcompiler ,$(MPI_INC))
N_FLAGS += $(addprefix -Xcompiler ,$(N_INC))
N_FLAGS += $(addprefix -Xcompiler ,$(N_CXXINC))
# dirty hack: nvcc doesn't support __float128, so nvcc won't preprocess correctly 
# fftw3.h
# by using this trick, we make nvcc's preprocessor avoid this problem...
# should really find something else here...
# Do accfft_gpu.h really need to include fftw3.h ?
N_FLAGS += -D__INTEL_COMPILER


all: step1


step1.o:	step1.cpp
	$(CXX) $(CXXFLAGS) -c $^ -o $@  $(INCDIR) $(MPI_INC) $(MPI_LIB)

step1_gpu.o: step1_gpu.cu
	nvcc $^	-o $@ $(N_FLAGS)   

step1:	step1.o step1_gpu.o
	$(CXX) $(CXXFLAGS) $^  -o $@ $(LDFLAGS) $(LDFLAGS_GPU) -lcuda -L$(CUDA_LIB) -lcudart


clean:
	-rm -f *~ *.o step1
